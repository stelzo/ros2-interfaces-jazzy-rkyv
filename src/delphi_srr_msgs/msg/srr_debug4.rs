use rkyv::{Archive, Deserialize, Serialize};

#[derive(Debug, Clone, PartialEq, Serialize, Deserialize, Archive)]
pub struct SrrDebug4 {
    pub header: crate::std_msgs::msg::Header,
    pub timer_create_error: bool,
    pub thread_create_error: bool,
    pub arm_calibration_error: bool,
    pub spi_fee_error: bool,
    pub spi_comm_error: bool,
    pub socket_write_error: bool,
    pub dsp_cal_obsolete_62_error: bool,
    pub socket_read_error: bool,
    pub socket_init_error: bool,
    pub signal_wait_error: bool,
    pub signal_send_error: bool,
    pub signal_create_error: bool,
    pub shared_mem_write_error: bool,
    pub shared_mem_read_error: bool,
    pub shared_mem_config_error: bool,
    pub share_mem_init_error: bool,
    pub ram_test_error: bool,
    pub num_errors: bool,
    pub mmap_memory_error: bool,
    pub isr_attach_error: bool,
    pub ipc_drv_write_error: bool,
    pub ipc_drv_trigger_error: bool,
    pub ipc_drv_sync_error: bool,
    pub ipc_drv_read_error: bool,
    pub ipc_drv_init_error: bool,
    pub interrupt_enable_error: bool,
    pub hil_format_error: bool,
    pub flash_filesystem_error: bool,
    pub error_none: bool,
    pub dsp_load_read_error: bool,
    pub dsp_load_open_error: bool,
    pub dsp_load_address_error: bool,
    pub dsp_isp_write_error: bool,
    pub dsp_ipc_read_error: bool,
    pub dsp_ipc_init: bool,
    pub dsp_init_error: bool,
    pub dsp_drv_start_error: bool,
    pub dsp_drv_load_error: bool,
    pub dsp_drv_init_error: bool,
    pub dsp_drv_init2_error: bool,
    pub dsp_drv_init1_error: bool,
    pub dsp_calibration_error: bool,
    pub can_xmt_error: bool,
    pub can_rcv_error: bool,
    pub can_hardware_error: bool,
    pub always_true: bool,
}

impl Default for SrrDebug4 {
    fn default() -> Self {
        SrrDebug4 {
            header: crate::std_msgs::msg::Header::default(),
            timer_create_error: false,
            thread_create_error: false,
            arm_calibration_error: false,
            spi_fee_error: false,
            spi_comm_error: false,
            socket_write_error: false,
            dsp_cal_obsolete_62_error: false,
            socket_read_error: false,
            socket_init_error: false,
            signal_wait_error: false,
            signal_send_error: false,
            signal_create_error: false,
            shared_mem_write_error: false,
            shared_mem_read_error: false,
            shared_mem_config_error: false,
            share_mem_init_error: false,
            ram_test_error: false,
            num_errors: false,
            mmap_memory_error: false,
            isr_attach_error: false,
            ipc_drv_write_error: false,
            ipc_drv_trigger_error: false,
            ipc_drv_sync_error: false,
            ipc_drv_read_error: false,
            ipc_drv_init_error: false,
            interrupt_enable_error: false,
            hil_format_error: false,
            flash_filesystem_error: false,
            error_none: false,
            dsp_load_read_error: false,
            dsp_load_open_error: false,
            dsp_load_address_error: false,
            dsp_isp_write_error: false,
            dsp_ipc_read_error: false,
            dsp_ipc_init: false,
            dsp_init_error: false,
            dsp_drv_start_error: false,
            dsp_drv_load_error: false,
            dsp_drv_init_error: false,
            dsp_drv_init2_error: false,
            dsp_drv_init1_error: false,
            dsp_calibration_error: false,
            can_xmt_error: false,
            can_rcv_error: false,
            can_hardware_error: false,
            always_true: false,
        }
    }
}
