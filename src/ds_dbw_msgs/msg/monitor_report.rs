use rkyv::{Archive, Deserialize, Serialize};

#[derive(Debug, Clone, PartialEq, Serialize, Deserialize, Archive)]
pub struct MonitorReport {
    pub header: crate::std_msgs::msg::Header,
    pub fault: bool,
    pub shutoff: bool,
    pub shutoff_on_motion: bool,
    pub stationary: bool,
    pub fault_test: u8,
    pub fault_system: u8,
    pub fault_steer: u8,
    pub fault_brake: u8,
    pub fault_thrtl: u8,
    pub fault_gear: u8,
    pub fault_ulc: u8,
    pub fault_vehicle_velocity: u8,
    pub fault_steer_feedback: u8,
    pub fault_steer_input: u8,
    pub fault_steer_param: u8,
    pub fault_steer_limit: u8,
    pub fault_steer_override: u8,
    pub fault_steer_cmd: u8,
    pub fault_steer_cmd_rate: u8,
    pub fault_steer_cmd_en: u8,
    pub fault_steer_cmd_sys: u8,
    pub fault_steer_cmd_ovr: u8,
    pub fault_brake_feedback: u8,
    pub fault_brake_input: u8,
    pub fault_brake_param: u8,
    pub fault_brake_limit: u8,
    pub fault_brake_override: u8,
    pub fault_brake_cmd: u8,
    pub fault_brake_cmd_ulc: u8,
    pub fault_brake_cmd_en: u8,
    pub fault_brake_cmd_sys: u8,
    pub fault_brake_cmd_ovr: u8,
    pub fault_thrtl_feedback: u8,
    pub fault_thrtl_input: u8,
    pub fault_thrtl_param: u8,
    pub fault_thrtl_limit: u8,
    pub fault_thrtl_override: u8,
    pub fault_thrtl_cmd: u8,
    pub fault_thrtl_cmd_ulc: u8,
    pub fault_thrtl_cmd_en: u8,
    pub fault_thrtl_cmd_sys: u8,
    pub fault_thrtl_cmd_ovr: u8,
    pub fault_gear_feedback: u8,
    pub fault_gear_input: u8,
    pub fault_gear_param: u8,
    pub fault_gear_override: u8,
    pub fault_gear_cmd: u8,
    pub fault_gear_cmd_ulc: u8,
    pub fault_system_param: u8,
    pub steer_cmd_match_oem: bool,
    pub steer_cmd_match_dbw: bool,
    pub brake_cmd_match_oem: bool,
    pub brake_cmd_match_dbw: bool,
    pub thrtl_cmd_match_oem: bool,
    pub thrtl_cmd_match_dbw: bool,
    pub gear_cmd_match_oem: bool,
    pub gear_cmd_match_dbw: bool,
}

impl MonitorReport {
    pub const FAULT_UNKNOWN: u8 = 0;
    pub const FAULT_NONE: u8 = 1;
    pub const FAULT_FAULT: u8 = 2;
}

impl Default for MonitorReport {
    fn default() -> Self {
        MonitorReport {
            header: crate::std_msgs::msg::Header::default(),
            fault: false,
            shutoff: false,
            shutoff_on_motion: false,
            stationary: false,
            fault_test: 0,
            fault_system: 0,
            fault_steer: 0,
            fault_brake: 0,
            fault_thrtl: 0,
            fault_gear: 0,
            fault_ulc: 0,
            fault_vehicle_velocity: 0,
            fault_steer_feedback: 0,
            fault_steer_input: 0,
            fault_steer_param: 0,
            fault_steer_limit: 0,
            fault_steer_override: 0,
            fault_steer_cmd: 0,
            fault_steer_cmd_rate: 0,
            fault_steer_cmd_en: 0,
            fault_steer_cmd_sys: 0,
            fault_steer_cmd_ovr: 0,
            fault_brake_feedback: 0,
            fault_brake_input: 0,
            fault_brake_param: 0,
            fault_brake_limit: 0,
            fault_brake_override: 0,
            fault_brake_cmd: 0,
            fault_brake_cmd_ulc: 0,
            fault_brake_cmd_en: 0,
            fault_brake_cmd_sys: 0,
            fault_brake_cmd_ovr: 0,
            fault_thrtl_feedback: 0,
            fault_thrtl_input: 0,
            fault_thrtl_param: 0,
            fault_thrtl_limit: 0,
            fault_thrtl_override: 0,
            fault_thrtl_cmd: 0,
            fault_thrtl_cmd_ulc: 0,
            fault_thrtl_cmd_en: 0,
            fault_thrtl_cmd_sys: 0,
            fault_thrtl_cmd_ovr: 0,
            fault_gear_feedback: 0,
            fault_gear_input: 0,
            fault_gear_param: 0,
            fault_gear_override: 0,
            fault_gear_cmd: 0,
            fault_gear_cmd_ulc: 0,
            fault_system_param: 0,
            steer_cmd_match_oem: false,
            steer_cmd_match_dbw: false,
            brake_cmd_match_oem: false,
            brake_cmd_match_dbw: false,
            thrtl_cmd_match_oem: false,
            thrtl_cmd_match_dbw: false,
            gear_cmd_match_oem: false,
            gear_cmd_match_dbw: false,
        }
    }
}
