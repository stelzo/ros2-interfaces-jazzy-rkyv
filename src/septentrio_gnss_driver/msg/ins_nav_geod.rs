use rkyv::{Archive, Deserialize, Serialize};

#[derive(Debug, Clone, PartialEq, Serialize, Deserialize, Archive)]
pub struct INSNavGeod {
    pub header: crate::std_msgs::msg::Header,
    pub block_header: crate::septentrio_gnss_driver::msg::BlockHeader,
    pub gnss_mode: u8,
    pub error: u8,
    pub info: u16,
    pub gnss_age: u16,
    pub latitude: f64,
    pub longitude: f64,
    pub height: f64,
    pub undulation: f32,
    pub accuracy: u16,
    pub latency: u16,
    pub datum: u8,
    pub sb_list: u16,
    pub latitude_std_dev: f32,
    pub longitude_std_dev: f32,
    pub height_std_dev: f32,
    pub latitude_longitude_cov: f32,
    pub latitude_height_cov: f32,
    pub longitude_height_cov: f32,
    pub heading: f32,
    pub pitch: f32,
    pub roll: f32,
    pub heading_std_dev: f32,
    pub pitch_std_dev: f32,
    pub roll_std_dev: f32,
    pub heading_pitch_cov: f32,
    pub heading_roll_cov: f32,
    pub pitch_roll_cov: f32,
    pub ve: f32,
    pub vn: f32,
    pub vu: f32,
    pub ve_std_dev: f32,
    pub vn_std_dev: f32,
    pub vu_std_dev: f32,
    pub ve_vn_cov: f32,
    pub ve_vu_cov: f32,
    pub vn_vu_cov: f32,
}

impl Default for INSNavGeod {
    fn default() -> Self {
        INSNavGeod {
            header: crate::std_msgs::msg::Header::default(),
            block_header: crate::septentrio_gnss_driver::msg::BlockHeader::default(),
            gnss_mode: 0,
            error: 0,
            info: 0,
            gnss_age: 0,
            latitude: 0.0,
            longitude: 0.0,
            height: 0.0,
            undulation: 0.0,
            accuracy: 0,
            latency: 0,
            datum: 0,
            sb_list: 0,
            latitude_std_dev: 0.0,
            longitude_std_dev: 0.0,
            height_std_dev: 0.0,
            latitude_longitude_cov: 0.0,
            latitude_height_cov: 0.0,
            longitude_height_cov: 0.0,
            heading: 0.0,
            pitch: 0.0,
            roll: 0.0,
            heading_std_dev: 0.0,
            pitch_std_dev: 0.0,
            roll_std_dev: 0.0,
            heading_pitch_cov: 0.0,
            heading_roll_cov: 0.0,
            pitch_roll_cov: 0.0,
            ve: 0.0,
            vn: 0.0,
            vu: 0.0,
            ve_std_dev: 0.0,
            vn_std_dev: 0.0,
            vu_std_dev: 0.0,
            ve_vn_cov: 0.0,
            ve_vu_cov: 0.0,
            vn_vu_cov: 0.0,
        }
    }
}
