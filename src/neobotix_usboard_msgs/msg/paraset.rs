use rkyv::{Archive, Deserialize, Serialize};

#[derive(Debug, Clone, PartialEq, Serialize, Deserialize, Archive)]
pub struct Paraset {
    pub header: crate::std_msgs::msg::Header,
    pub command: u8,
    pub set_num: u8,
    pub paraset_byte54: u8,
    pub paraset_byte53: u8,
    pub paraset_byte52: u8,
    pub paraset_byte51: u8,
    pub paraset_byte50: u8,
    pub paraset_byte49: u8,
    pub paraset_byte48: u8,
    pub paraset_byte47: u8,
    pub paraset_byte46: u8,
    pub paraset_byte45: u8,
    pub paraset_byte44: u8,
    pub paraset_byte43: u8,
    pub paraset_byte42: u8,
    pub paraset_byte41: u8,
    pub paraset_byte40: u8,
    pub paraset_byte39: u8,
    pub paraset_byte38: u8,
    pub paraset_byte37: u8,
    pub paraset_byte36: u8,
    pub paraset_byte35: u8,
    pub paraset_byte34: u8,
    pub paraset_byte33: u8,
    pub paraset_byte32: u8,
    pub paraset_byte31: u8,
    pub paraset_byte30: u8,
    pub paraset_byte29: u8,
    pub paraset_byte28: u8,
    pub paraset_byte27: u8,
    pub paraset_byte26: u8,
    pub paraset_byte25: u8,
    pub paraset_byte24: u8,
    pub paraset_byte23: u8,
    pub paraset_byte22: u8,
    pub paraset_byte21: u8,
    pub paraset_byte20: u8,
    pub paraset_byte19: u8,
    pub paraset_byte18: u8,
    pub paraset_byte17: u8,
    pub paraset_byte16: u8,
    pub paraset_byte15: u8,
    pub paraset_byte14: u8,
    pub paraset_byte13: u8,
    pub paraset_byte12: u8,
    pub paraset_byte11: u8,
    pub paraset_byte10: u8,
    pub paraset_byte9: u8,
    pub paraset_byte8: u8,
    pub paraset_byte7: u8,
    pub paraset_byte6: u8,
    pub paraset_byte5: u8,
    pub paraset_byte4: u8,
    pub paraset_byte3: u8,
    pub paraset_byte2: u8,
    pub paraset_byte1: u8,
}

impl Default for Paraset {
    fn default() -> Self {
        Paraset {
            header: crate::std_msgs::msg::Header::default(),
            command: 0,
            set_num: 0,
            paraset_byte54: 0,
            paraset_byte53: 0,
            paraset_byte52: 0,
            paraset_byte51: 0,
            paraset_byte50: 0,
            paraset_byte49: 0,
            paraset_byte48: 0,
            paraset_byte47: 0,
            paraset_byte46: 0,
            paraset_byte45: 0,
            paraset_byte44: 0,
            paraset_byte43: 0,
            paraset_byte42: 0,
            paraset_byte41: 0,
            paraset_byte40: 0,
            paraset_byte39: 0,
            paraset_byte38: 0,
            paraset_byte37: 0,
            paraset_byte36: 0,
            paraset_byte35: 0,
            paraset_byte34: 0,
            paraset_byte33: 0,
            paraset_byte32: 0,
            paraset_byte31: 0,
            paraset_byte30: 0,
            paraset_byte29: 0,
            paraset_byte28: 0,
            paraset_byte27: 0,
            paraset_byte26: 0,
            paraset_byte25: 0,
            paraset_byte24: 0,
            paraset_byte23: 0,
            paraset_byte22: 0,
            paraset_byte21: 0,
            paraset_byte20: 0,
            paraset_byte19: 0,
            paraset_byte18: 0,
            paraset_byte17: 0,
            paraset_byte16: 0,
            paraset_byte15: 0,
            paraset_byte14: 0,
            paraset_byte13: 0,
            paraset_byte12: 0,
            paraset_byte11: 0,
            paraset_byte10: 0,
            paraset_byte9: 0,
            paraset_byte8: 0,
            paraset_byte7: 0,
            paraset_byte6: 0,
            paraset_byte5: 0,
            paraset_byte4: 0,
            paraset_byte3: 0,
            paraset_byte2: 0,
            paraset_byte1: 0,
        }
    }
}
